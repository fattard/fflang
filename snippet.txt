using func readMemory(addr: Int) -> Int;
using func writeMemory(addr: Int, data: Int) -> Int;
using func add(a: Int, b: Int) -> Int;
using func not(a: Int) -> Int;
using func sub(a: Int, b: Int) -> Int;
using func noArgs() -> Int;

// Entry point
func main() -> Int
{
    var a: Int;
    var b: Int;
    var c: Int;
    var addr: Int;
    var value: Int;

    set a = 5;
    set b = 3;

    set c = add(a, b);

    set addr = 100;

LOOP:
    set value = readMemory(addr);

    if (__bool_check(value))
    {
        _ = writeMemory(addr, c);
    }
    else
    {
        _ = writeMemory(addr, value);
    }

    set b = sub(b, 1);

    if (__bool_check(b))
    {
        goto LOOP;
    }

    set value = c;

    if (__bool_check(a))
    {
        if (__bool_check(b))
        {
            set value = noArgs();
        }
    }

END:
    return 0;
}

// Read from memory
func readMemory(addr: Int) -> Int
{
    return __builtin_int_mem_read(addr);
}

// Write to memory
func writeMemory(addr: Int, data: Int) -> Int
{
    _ = __builtin_int_mem_write(addr, data);
    return 0;
}

func add(a: Int, b: Int) -> Int
{
    return __builtin_int_add(a, b);
}

func not(a: Int) -> Int
{
    return __builtin_int_nand(a, a);
}

func sub(a: Int, b: Int) -> Int
{
    return __builtin_int_add(a, __builtin_int_add(not(b), 1));
}

// Function with no arguments
func noArgs() -> Int
{
    return 7;
}
